{"ast":null,"code":"var _jsxFileName = \"/Users/derek/Documents/Brainstation 2020 Cohort/derek-so-brainflix/sprint-two/src/components/VideoInformation.js\";\nimport React from \"react\";\nimport likeImg from \"../assets/icons/svg/icon-likes.svg\";\nimport viewImg from \"../assets/icons/svg/icon-views.svg\";\nexport default function VideoInformation({\n  currentVideo\n}) {\n  function convertTimestampToDateString(timestamp) {\n    // 1000 ms in 1s\n    // 60,000 ms in 1min\n    // 3,600,000 ms in 1 hour\n    // 7,200,000\n    // 86,400,000 ms in 1 Day\n    let timeDifference = Date.now() - timestamp;\n\n    if (timeDifference < 60000) {\n      return `${Math.floor(timeDifference / 1000)} s ago`;\n    } else if (timeDifference < 3600000) {\n      return `${Math.floor(timeDifference / 60000)} minutes ago`;\n    } else if (timeDifference < 7200000) {\n      return `1 hour ago`;\n    } else if (timeDifference < 86400000) {\n      return `${Math.floor(timeDifference / 3600000)} hours ago`;\n    }\n\n    let date = new Date(timestamp);\n    let dateString = `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`;\n    return dateString;\n  }\n\n  return React.createElement(\"div\", {\n    className: \"videoinfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"videoinfo__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, currentVideo.title), React.createElement(\"div\", {\n    className: \"videoinfo__author-date-view-like-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"videoinfo__author-post-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"videoinfo__author\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"By \", currentVideo.channel), React.createElement(\"span\", {\n    className: \"videoinfo__postdate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, convertTimestampToDateString(currentVideo.timestamp))), React.createElement(\"div\", {\n    className: \"videoinfo__view-like-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"videoinfo__view-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"videoinfo__view-img\",\n    src: viewImg,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"videoinfo__view-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, currentVideo.views)), React.createElement(\"div\", {\n    className: \"videoinfo__like-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"videoinfo__like-img\",\n    src: likeImg,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"videoinfo__like-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, currentVideo.likes)))), React.createElement(\"p\", {\n    className: \"videoinfo__description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, currentVideo.description));\n}","map":{"version":3,"sources":["/Users/derek/Documents/Brainstation 2020 Cohort/derek-so-brainflix/sprint-two/src/components/VideoInformation.js"],"names":["React","VideoInformation","currentVideo","convertTimestampToDateString","timestamp","timeDifference","Date","now","Math","floor","date","dateString","getMonth","getDate","getFullYear","title","channel","viewImg","views","likeImg","likes","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAIA,eAAe,SAASC,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAA4C;AACzD,WAASC,4BAAT,CAAsCC,SAAtC,EAAiD;AAC/C;AACA;AACA;AACA;AACA;AACA,QAAIC,cAAc,GAAGC,IAAI,CAACC,GAAL,KAAaH,SAAlC;;AAEA,QAAIC,cAAc,GAAG,KAArB,EAA4B;AAC1B,aAAQ,GAAEG,IAAI,CAACC,KAAL,CAAWJ,cAAc,GAAG,IAA5B,CAAkC,QAA5C;AACD,KAFD,MAEO,IAAIA,cAAc,GAAG,OAArB,EAA8B;AACnC,aAAQ,GAAEG,IAAI,CAACC,KAAL,CAAWJ,cAAc,GAAG,KAA5B,CAAmC,cAA7C;AACD,KAFM,MAEA,IAAIA,cAAc,GAAG,OAArB,EAA8B;AACnC,aAAQ,YAAR;AACD,KAFM,MAEA,IAAIA,cAAc,GAAG,QAArB,EAA+B;AACpC,aAAQ,GAAEG,IAAI,CAACC,KAAL,CAAWJ,cAAc,GAAG,OAA5B,CAAqC,YAA/C;AACD;;AAED,QAAIK,IAAI,GAAG,IAAIJ,IAAJ,CAASF,SAAT,CAAX;AACA,QAAIO,UAAU,GAAI,GAAED,IAAI,CAACE,QAAL,KAClB,CAAE,IAAGF,IAAI,CAACG,OAAL,EAAe,IAAGH,IAAI,CAACI,WAAL,EAAmB,EAD5C;AAGA,WAAOH,UAAP;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCT,YAAY,CAACa,KAA/C,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAqCb,YAAY,CAACc,OAAlD,CADF,EAEE;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,4BAA4B,CAACD,YAAY,CAACE,SAAd,CAD/B,CAFF,CADF,EAQE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAqC,IAAA,GAAG,EAAEa,OAA1C;AAAmD,IAAA,GAAG,EAAC,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAM,IAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCf,YAAY,CAACgB,KAAtD,CAFF,CADF,EAKE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAqC,IAAA,GAAG,EAAEC,OAA1C;AAAmD,IAAA,GAAG,EAAC,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAM,IAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCjB,YAAY,CAACkB,KAAtD,CAFF,CALF,CARF,CAFF,EAsBE;AAAG,IAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuClB,YAAY,CAACmB,WAApD,CAtBF,CADF;AA0BD","sourcesContent":["import React from \"react\";\nimport likeImg from \"../assets/icons/svg/icon-likes.svg\";\nimport viewImg from \"../assets/icons/svg/icon-views.svg\";\n\nexport default function VideoInformation({ currentVideo }) {\n  function convertTimestampToDateString(timestamp) {\n    // 1000 ms in 1s\n    // 60,000 ms in 1min\n    // 3,600,000 ms in 1 hour\n    // 7,200,000\n    // 86,400,000 ms in 1 Day\n    let timeDifference = Date.now() - timestamp;\n\n    if (timeDifference < 60000) {\n      return `${Math.floor(timeDifference / 1000)} s ago`;\n    } else if (timeDifference < 3600000) {\n      return `${Math.floor(timeDifference / 60000)} minutes ago`;\n    } else if (timeDifference < 7200000) {\n      return `1 hour ago`;\n    } else if (timeDifference < 86400000) {\n      return `${Math.floor(timeDifference / 3600000)} hours ago`;\n    }\n\n    let date = new Date(timestamp);\n    let dateString = `${date.getMonth() +\n      1}/${date.getDate()}/${date.getFullYear()}`;\n\n    return dateString;\n  }\n\n  return (\n    <div className=\"videoinfo\">\n      <h1 className=\"videoinfo__title\">{currentVideo.title}</h1>\n      <div className=\"videoinfo__author-date-view-like-container\">\n        <div className=\"videoinfo__author-post-container\">\n          <p className=\"videoinfo__author\">By {currentVideo.channel}</p>\n          <span className=\"videoinfo__postdate\">\n            {convertTimestampToDateString(currentVideo.timestamp)}\n          </span>\n        </div>\n\n        <div className=\"videoinfo__view-like-container\">\n          <div className=\"videoinfo__view-container\">\n            <img className=\"videoinfo__view-img\" src={viewImg} alt=\"\" />\n            <span className=\"videoinfo__view-count\">{currentVideo.views}</span>\n          </div>\n          <div className=\"videoinfo__like-container\">\n            <img className=\"videoinfo__like-img\" src={likeImg} alt=\"\" />\n            <span className=\"videoinfo__like-count\">{currentVideo.likes}</span>\n          </div>\n        </div>\n      </div>\n\n      <p className=\"videoinfo__description\">{currentVideo.description}</p>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}