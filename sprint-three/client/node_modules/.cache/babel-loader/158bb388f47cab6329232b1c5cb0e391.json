{"ast":null,"code":"var _jsxFileName = \"/Users/derek/Documents/Brainstation 2020 Cohort/derek-so-brainflix/sprint-two/src/App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./styles/App.css\";\nimport Navbar from \"./components/Navbar\";\nimport VideoDescription from \"./components/VideoDescription\";\nimport Upload from \"./components/Upload\";\nimport Axios from \"axios\";\nconst apiKey = \"9646c732-3af7-4647-8da4-20fb64fd3c53\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      playlist: [],\n      currentVideoID: \"\",\n      currentVideo: {\n        comments: []\n      }\n    };\n\n    this.setCurrentVideo = id => {\n      Axios.get(`https://project-2-api.herokuapp.com/videos/${id}/?api_key=${apiKey}`).then(data => {\n        this.setState({\n          currentVideoID: id,\n          currentVideo: data.data\n        });\n      }).catch(error => console.log(error));\n    };\n  }\n\n  componentDidMount() {\n    Axios.get(`https://project-2-api.herokuapp.com/videos/?api_key=${apiKey}`).then(data => {\n      let playlist = data.data;\n      let currentVideoID = data.data[0].id;\n      Axios.get(`https://project-2-api.herokuapp.com/videos/${currentVideoID}/?api_key=${apiKey}`).then(data => {\n        this.setState({\n          playlist: playlist,\n          currentVideoID: currentVideoID,\n          currentVideo: data.data\n        });\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"componentDidUpdate fired\");\n    console.log(\"previous props are\", prevProps);\n    console.log(\"previous state is\", prevState);\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: renderProps => {\n        return React.createElement(VideoDescription, Object.assign({\n          currentVideo: this.state.currentVideo,\n          playlist: this.state.playlist,\n          currentVideoID: this.state.currentVideoID,\n          setCurrentVideo: this.setCurrentVideo\n        }, renderProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/video/:id\",\n      exact: true,\n      render: renderProps => {\n        if (renderProps.match.params.id !== this.state.currentVideoID) {\n          this.setCurrentVideo(renderProps.match.params.id);\n        }\n\n        return React.createElement(VideoDescription, Object.assign({\n          currentVideo: this.state.currentVideo,\n          playlist: this.state.playlist,\n          currentVideoID: this.state.currentVideoID,\n          setCurrentVideo: this.setCurrentVideo\n        }, renderProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/upload\",\n      component: Upload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/derek/Documents/Brainstation 2020 Cohort/derek-so-brainflix/sprint-two/src/App.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Navbar","VideoDescription","Upload","Axios","apiKey","App","state","playlist","currentVideoID","currentVideo","comments","setCurrentVideo","id","get","then","data","setState","catch","error","console","log","componentDidMount","componentDidUpdate","prevProps","prevState","render","renderProps","match","params"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./styles/App.css\";\nimport Navbar from \"./components/Navbar\";\nimport VideoDescription from \"./components/VideoDescription\";\nimport Upload from \"./components/Upload\";\nimport Axios from \"axios\";\n\nconst apiKey = \"9646c732-3af7-4647-8da4-20fb64fd3c53\";\n\nclass App extends Component {\n  state = {\n    playlist: [],\n    currentVideoID: \"\",\n    currentVideo: { comments: [] }\n  };\n\n  setCurrentVideo = id => {\n    Axios.get(\n      `https://project-2-api.herokuapp.com/videos/${id}/?api_key=${apiKey}`\n    )\n      .then(data => {\n        this.setState({\n          currentVideoID: id,\n          currentVideo: data.data\n        });\n      })\n      .catch(error => console.log(error));\n  };\n\n  componentDidMount() {\n    Axios.get(`https://project-2-api.herokuapp.com/videos/?api_key=${apiKey}`)\n      .then(data => {\n        let playlist = data.data;\n        let currentVideoID = data.data[0].id;\n\n        Axios.get(\n          `https://project-2-api.herokuapp.com/videos/${currentVideoID}/?api_key=${apiKey}`\n        ).then(data => {\n          this.setState({\n            playlist: playlist,\n            currentVideoID: currentVideoID,\n            currentVideo: data.data\n          });\n        });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"componentDidUpdate fired\");\n    console.log(\"previous props are\", prevProps);\n    console.log(\"previous state is\", prevState);\n  }\n\n  render() {\n    return (\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={renderProps => {\n              return (\n                <VideoDescription\n                  currentVideo={this.state.currentVideo}\n                  playlist={this.state.playlist}\n                  currentVideoID={this.state.currentVideoID}\n                  setCurrentVideo={this.setCurrentVideo}\n                  {...renderProps}\n                />\n              );\n            }}\n          />\n          <Route\n            path=\"/video/:id\"\n            exact\n            render={renderProps => {\n              if (renderProps.match.params.id !== this.state.currentVideoID) {\n                this.setCurrentVideo(renderProps.match.params.id);\n              }\n              return (\n                <VideoDescription\n                  currentVideo={this.state.currentVideo}\n                  playlist={this.state.playlist}\n                  currentVideoID={this.state.currentVideoID}\n                  setCurrentVideo={this.setCurrentVideo}\n                  {...renderProps}\n                />\n              );\n            }}\n          />\n          <Route path=\"/upload\" component={Upload} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}