{"ast":null,"code":"var _jsxFileName = \"/Users/derek/Documents/Brainstation 2020 Cohort/derek-so-brainflix/sprint-three/client/src/components/Comment.js\";\nimport React from \"react\";\nimport mohanImg from \"../assets/images/mohan-muruge.jpg\";\nimport axios from \"axios\";\n\nfunction Comment({\n  comments\n}) {\n  function convertTimestampToDateString(timestamp) {\n    let timeDifference = Date.now() - timestamp;\n\n    if (timeDifference < 60000) {\n      return `${Math.floor(timeDifference / 1000)} s ago`;\n    } else if (timeDifference < 3600000) {\n      return `${Math.floor(timeDifference / 60000)} minutes ago`;\n    } else if (timeDifference < 7200000) {\n      return `1 hour ago`;\n    } else if (timeDifference < 86400000) {\n      return `${Math.floor(timeDifference / 3600000)} hours ago`;\n    }\n\n    let date = new Date(timestamp);\n    let dateString = `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`;\n    return dateString;\n  }\n\n  const commentClick = event => {\n    event.preventDefault(); // axios\n    //   .post(`/${props.id}/comment`, { comment: event.target.usercomment.value })\n\n    axios.post(\"/\").then(res => console.log(res)).catch(err => console.log(err));\n  };\n\n  let commentList = comments.map(comment => {\n    return React.createElement(\"div\", {\n      className: \"comments__card\",\n      id: comment.id,\n      key: comment.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"comments__card-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"comments__card-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"comments__card-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"comments__card-right-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"comments__card-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, comment.name), React.createElement(\"p\", {\n      className: \"comments__card-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, convertTimestampToDateString(comment.timestamp))), React.createElement(\"div\", {\n      className: \"comments__card-right-bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"comments__card-comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, comment.comment))));\n  });\n  return React.createElement(\"section\", {\n    className: \"comments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"comments__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, comments.length, \" Comments\"), React.createElement(\"div\", {\n    className: \"comments__input-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"comments__image-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: mohanImg,\n    alt: \"user icon\",\n    className: \"comments__image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(\"form\", {\n    action: \"\",\n    onSubmit: commentClick,\n    className: \"comments__form\",\n    id: \"comments-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"comments__user-input-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"comments__user-input-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"JOIN THE CONVERSATION\"), React.createElement(\"textarea\", {\n    className: \"comments__user-input-field\",\n    name: \"usercomment\",\n    form: \"comments-form\",\n    cols: \"30\",\n    rows: \"10\",\n    placeholder: \"Add a new comment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"COMMENT\",\n    className: \"comments__form-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }))), commentList);\n}\n\nexport default Comment;","map":{"version":3,"sources":["/Users/derek/Documents/Brainstation 2020 Cohort/derek-so-brainflix/sprint-three/client/src/components/Comment.js"],"names":["React","mohanImg","axios","Comment","comments","convertTimestampToDateString","timestamp","timeDifference","Date","now","Math","floor","date","dateString","getMonth","getDate","getFullYear","commentClick","event","preventDefault","post","then","res","console","log","catch","err","commentList","map","comment","id","name","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport mohanImg from \"../assets/images/mohan-muruge.jpg\";\nimport axios from \"axios\";\n\nfunction Comment({ comments }) {\n  function convertTimestampToDateString(timestamp) {\n    let timeDifference = Date.now() - timestamp;\n\n    if (timeDifference < 60000) {\n      return `${Math.floor(timeDifference / 1000)} s ago`;\n    } else if (timeDifference < 3600000) {\n      return `${Math.floor(timeDifference / 60000)} minutes ago`;\n    } else if (timeDifference < 7200000) {\n      return `1 hour ago`;\n    } else if (timeDifference < 86400000) {\n      return `${Math.floor(timeDifference / 3600000)} hours ago`;\n    }\n\n    let date = new Date(timestamp);\n    let dateString = `${date.getMonth() +\n      1}/${date.getDate()}/${date.getFullYear()}`;\n\n    return dateString;\n  }\n\n  const commentClick = event => {\n    event.preventDefault();\n    // axios\n    //   .post(`/${props.id}/comment`, { comment: event.target.usercomment.value })\n    axios\n      .post(\"/\")\n      .then(res => console.log(res))\n      .catch(err => console.log(err));\n  };\n\n  let commentList = comments.map(comment => {\n    return (\n      <div className=\"comments__card\" id={comment.id} key={comment.id}>\n        <div className=\"comments__card-left\">\n          <div className=\"comments__card-image\" />\n        </div>\n        <div className=\"comments__card-right\">\n          <div className=\"comments__card-right-top\">\n            <p className=\"comments__card-name\">{comment.name}</p>\n            <p className=\"comments__card-date\">\n              {convertTimestampToDateString(comment.timestamp)}\n            </p>\n          </div>\n          <div className=\"comments__card-right-bottom\">\n            <p className=\"comments__card-comment\">{comment.comment}</p>\n          </div>\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <section className=\"comments\">\n      <h1 className=\"comments__title\">{comments.length} Comments</h1>\n      <div className=\"comments__input-container\">\n        <div className=\"comments__image-container\">\n          <img src={mohanImg} alt=\"user icon\" className=\"comments__image\" />\n        </div>\n        <form\n          action=\"\"\n          onSubmit={commentClick}\n          className=\"comments__form\"\n          id=\"comments-form\"\n        >\n          <div className=\"comments__user-input-container\">\n            <label className=\"comments__user-input-label\">\n              JOIN THE CONVERSATION\n            </label>\n            <textarea\n              className=\"comments__user-input-field\"\n              name=\"usercomment\"\n              form=\"comments-form\"\n              cols=\"30\"\n              rows=\"10\"\n              placeholder=\"Add a new comment\"\n            ></textarea>\n          </div>\n          <input\n            type=\"submit\"\n            value=\"COMMENT\"\n            className=\"comments__form-button\"\n          />\n        </form>\n      </div>\n      {commentList}\n    </section>\n  );\n}\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}